@import 'tailwindcss';

@plugin "tailwindcss-animate";
@plugin "@tailwindcss/typography";

@custom-variant dark (&:is(.dark *));

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-inter-variable);
  --font-mono: var(--font-jetbrains-mono);
  --color-sidebar-ring: var(--sidebar-ring);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar: var(--sidebar);
  --color-ring: var(--ring);
  --color-input: var(--input);
  --color-border: var(--border);
  --color-destructive: var(--destructive);
  --color-accent-foreground: var(--accent-foreground);
  --color-accent: var(--accent);
  --color-muted-foreground: var(--muted-foreground);
  --color-muted: var(--muted);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-secondary: var(--secondary);
  --color-primary-foreground: var(--primary-foreground);
  --color-primary: var(--primary);
  --color-popover-foreground: var(--popover-foreground);
  --color-popover: var(--popover);
  --color-card-foreground: var(--card-foreground);
  --color-card: var(--card);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
  --animate-accordion-down: accordion-down 0.2s ease-out;
  --animate-accordion-up: accordion-up 0.2s ease-out;
  /*
  ---break---
*/
  @keyframes accordion-down {
    from {
      height: 0;
    }
    to {
      height: var(--radix-accordion-content-height);
    }
  }
  /*
  ---break---
*/
  @keyframes accordion-up {
    from {
      height: var(--radix-accordion-content-height);
    }
    to {
      height: 0;
    }
  }
}

:root {
  --radius: 0.625rem;
  --background: oklch(1 0 0);
  --foreground: oklch(0.28 0.04 260);
  --card: oklch(1 0 0);
  --card-foreground: oklch(0.129 0.042 264.695);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0.129 0.042 264.695);
  --primary: oklch(0.52 0.09 223);
  --primary-foreground: oklch(1 0 0);
  --secondary: oklch(0.51 0.19 28);
  --secondary-foreground: oklch(1 0 0);
  --muted: oklch(0.98 0.02 201);
  --muted-foreground: oklch(0.45 0.08 224);
  --accent: oklch(0.98 0.02 201);
  --accent-foreground: oklch(0.45 0.08 224);
  --destructive: oklch(0.577 0.245 27.325);
  --border: oklch(0.92 0.08 205);
  --input: oklch(0.929 0.013 255.508);
  --ring: oklch(0.64 0.21 25);
  --sidebar: oklch(0.98 0.02 201);
  --sidebar-foreground: oklch(0.40 0.07 227);
  --sidebar-primary: oklch(0.52 0.09 223);
  --sidebar-primary-foreground: oklch(0 0% 98%);
  --sidebar-accent: oklch(0.96 0.04 203);
  --sidebar-accent-foreground: oklch(0.30 0.05 230);
  --sidebar-border: oklch(0.87 0.12 207);
  --sidebar-ring: oklch(0.64 0.21 25);
}
.dark {
  --background: oklch(0.28 0.04 260);
  --foreground: oklch(1 0 0);
  --card: oklch(0.208 0.042 265.755);
  --card-foreground: oklch(0.984 0.003 247.858);
  --popover: oklch(0.984 0.003 247.858);
  --popover-foreground: oklch(0.984 0.003 247.858);
  --primary: oklch(0.92 0.08 205);
  --primary-foreground: oklch(0.30 0.05 230);
  --secondary: oklch(0.88 0.06 18);
  --secondary-foreground: oklch(0.26 0.09 26);
  --muted: oklch(0.52 0.09 223);
  --muted-foreground: oklch(0.98 0.02 201);
  --accent: oklch(0.61 0.11 222);
  --accent-foreground: oklch(1 0 0);
  --destructive: oklch(0.704 0.191 22.216);
  --border: oklch(0.52 0.09 223);
  --input: oklch(1 0 0 / 15%);
  --ring: oklch(0.71 0.17 22);
  --sidebar: oklch(0.30 0.05 230);
  --sidebar-foreground: oklch(0.96 0.04 203);
  --sidebar-primary: oklch(0.92 0.08 205);
  --sidebar-primary-foreground: oklch(0.30 0.05 230);
  --sidebar-accent: oklch(0.40 0.07 227);
  --sidebar-accent-foreground: oklch(0.98 0.02 201);
  --sidebar-border: oklch(0.45 0.08 224);
  --sidebar-ring: oklch(0.71 0.17 22);
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

@utility shiki {
  &pre {
    display: block;
    overflow-x: auto;
    padding-top: var(--code-padding);
    padding-bottom: var(--code-padding);

    /* In case no language is specified for Shiki */
    background-color: rgb(250, 250, 250);
    color: rgb(31, 35, 40);
    --shiki-dark-bg: #1e1e1e;
    --shiki-dark: #cdcdcd;
  }

  & code {
    display: block;
    width: fit-content;
    min-width: 100%;
    padding-left: var(--code-padding);
    padding-right: var(--code-padding);

    white-space: pre;
    word-spacing: normal;
    word-break: normal;
    word-wrap: normal;
    tab-size: 4;
    hyphens: none;
  }

  /********** Line highlight **********/

  & code span.highlighted {
    display: inline-block;
    width: calc(100% + 2 * var(--code-padding));
    transition: background-color 0.5s;
    background-color: hsl(var(--code-line-highlight) / 0.1);

    border-color: hsl(var(--code-line-highlight) / 0.2);
    border-left-width: 4px;

    padding-left: calc(var(--code-padding) - 4px);
    padding-right: var(--code-padding);
    margin-left: calc(-1 * var(--code-padding));
    margin-right: calc(-1 * var(--code-padding));

    & span {
      background-color: transparent !important;
      transition: background-color 0.5s;
    }
  }

  /********** Line numbers **********/

  & code span.line-number::before {
    display: inline-block;
    font-size: 0.875rem;
    line-height: 1.25rem;
    text-align: right;

    color: hsl(var(--code-line-number-color) / 0.6);

    content: attr(data-line);
    width: var(--line-number-width, --line-number-width-default);
    margin-right: var(--code-padding);
  }

  /********** CLI **********/

  & code span.line-command::before {
    content: '$';
    margin-right: 0.5rem;
  }

  /********** Required for Shiki **********/

  .dark & {
    color: var(--shiki-dark) !important;
    background-color: var(--background) !important;
    font-style: var(--shiki-dark-font-style) !important;
    font-weight: var(--shiki-dark-font-weight) !important;
    text-decoration: var(--shiki-dark-text-decoration) !important;
  }

  .dark & span:not(.line) {
    color: var(--shiki-dark) !important;
    background-color: var(--background) !important;
    font-style: var(--shiki-dark-font-style) !important;
    font-weight: var(--shiki-dark-font-weight) !important;
    text-decoration: var(--shiki-dark-text-decoration) !important;
  }

  /********** Highlighted word **********/

  & code span span.highlighted-word {
    @apply rounded-[0.30rem] dark:bg-red-900! dark:text-red-200! bg-red-200 text-red-900! p-0.5;
  }

  /********** Focused **********/
  & code span.focused {
    @apply blur-[1.5px];
  }

  /********** Diff **********/
  & code span.diff {
    display: inline-block;
    width: calc(100% + 2 * var(--code-padding));
    transition: background-color 0.5s;
    border-left-width: 4px;
    padding-left: calc(var(--code-padding) - 4px);
    padding-right: var(--code-padding);
    margin-left: calc(-1 * var(--code-padding));
    margin-right: calc(-1 * var(--code-padding));

    &.add {
      border-left-color: hsl(120, 40%, 50%);
      background-color: hsla(120, 40%, 50%, 0.1);
      span:first-child::before {
        @apply text-green-500 content-["+"];
      }
    }

    &.remove {
      border-left-color: hsl(0, 40%, 50%);
      background-color: hsla(0, 40%, 50%, 0.1);
      span:first-child::before {
        @apply text-red-500 content-["-"];
      }
    }

    & span {
      background-color: transparent !important;
    }
  }
}

@utility highlighted {
  /********** Line highlight **********/

  .shiki code &span {
    display: inline-block;
    width: calc(100% + 2 * var(--code-padding));
    transition: background-color 0.5s;
    background-color: hsl(var(--code-line-highlight) / 0.1);

    border-color: hsl(var(--code-line-highlight) / 0.2);
    border-left-width: 4px;

    padding-left: calc(var(--code-padding) - 4px);
    padding-right: var(--code-padding);
    margin-left: calc(-1 * var(--code-padding));
    margin-right: calc(-1 * var(--code-padding));

    & span {
      background-color: transparent !important;
      transition: background-color 0.5s;
    }
  }
}

@utility dark {
  .shiki code span.highlighted {
    & span {
      background-color: transparent !important;
    }
  }

  /********** Required for Shiki **********/

  & .shiki {
    color: var(--shiki-dark) !important;
    background-color: var(--background) !important;
    font-style: var(--shiki-dark-font-style) !important;
    font-weight: var(--shiki-dark-font-weight) !important;
    text-decoration: var(--shiki-dark-text-decoration) !important;
  }

  & .shiki span:not(.line) {
    color: var(--shiki-dark) !important;
    background-color: var(--background) !important;
    font-style: var(--shiki-dark-font-style) !important;
    font-weight: var(--shiki-dark-font-weight) !important;
    text-decoration: var(--shiki-dark-text-decoration) !important;
  }
}

@utility line-number {
  /********** Line numbers **********/
  .shiki code &span::before {
    display: inline-block;
    font-size: 0.875rem;
    line-height: 1.25rem;
    text-align: right;

    color: hsl(var(--code-line-number-color) / 0.6);

    content: attr(data-line);
    width: var(--line-number-width, --line-number-width-default);
    margin-right: var(--code-padding);
  }
}

@utility line-command {
  /********** CLI **********/
  .shiki code &span::before {
    content: '$';
    margin-right: 0.5rem;
  }
}

@utility highlighted-word {
  /********** Highlighted word **********/
  .shiki code span &span {
    @apply rounded-[0.30rem] dark:bg-red-900! dark:text-red-200! bg-red-200 text-red-900! p-0.5;
  }
}

@utility focused {
  /********** Focused **********/
  .shiki code &span {
    @apply blur-[1.5px];
  }
}

@utility diff {
  /********** Diff **********/
  .shiki code &span {
    display: inline-block;
    width: calc(100% + 2 * var(--code-padding));
    transition: background-color 0.5s;
    border-left-width: 4px;
    padding-left: calc(var(--code-padding) - 4px);
    padding-right: var(--code-padding);
    margin-left: calc(-1 * var(--code-padding));
    margin-right: calc(-1 * var(--code-padding));

    &.add {
      border-left-color: hsl(120, 40%, 50%);
      background-color: hsla(120, 40%, 50%, 0.1);
      span:first-child::before {
        @apply text-green-500 content-["+"];
      }
    }

    &.remove {
      border-left-color: hsl(0, 40%, 50%);
      background-color: hsla(0, 40%, 50%, 0.1);
      span:first-child::before {
        @apply text-red-500 content-["-"];
      }
    }

    & span {
      background-color: transparent !important;
    }
  }
}

@utility correct {
  /********** Quiz **********/
  @apply bg-green-700! text-white! focus:ring-green-700! dark:border-green-300! dark:bg-green-300! dark:text-green-950! dark:focus:ring-green-300!;
}

@utility questionModal {
  & .alert {
    @apply border text-white mb-[21px] p-5 rounded-sm border-solid border-transparent;
  }
}

@utility alert {
  .questionModal & {
    @apply border text-white mb-[21px] p-5 rounded-sm border-solid border-transparent;
  }
}

@utility incorrect {
  @apply bg-red-700! text-white! focus:ring-red-700! dark:border-red-300! dark:bg-red-300! dark:text-red-950! dark:focus:ring-red-300!;
}

@utility unanswered {
  @apply opacity-50;
}

@utility react-quiz-container {
  & .questionWrapper img {
    @apply w-full;
  }
}

@utility questionWrapper {
  .react-quiz-container & img {
    @apply w-full;
  }
}

@utility answerBtn {
  @apply w-full;
}

@layer utilities {
  :root {
    --code-padding: 1rem;
    --line-number-width-default: 0;
    --code-line-number-color: 0 0% 9%;
    --code-line-highlight: 0 0% 9%
  }

  code {
    font-variant-ligatures:common-ligatures;
    font-feature-settings: "liga" 0;
  }
}

/* React activity calendar */
.ch-container:nth-of-type(2){
  display: none;
}

.react-activity-calendar__scroll-container {
  @apply [&::-webkit-scrollbar-thumb]:bg-gray-300
  dark:[&::-webkit-scrollbar-thumb]:bg-slate-500
  [&::-webkit-scrollbar-track]:bg-gray-100
  dark:[&::-webkit-scrollbar-track]:bg-slate-700 [&::-webkit-scrollbar]:h-2;
}

/* mdx - prose */
.prose {
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    &:target {
      @apply scroll-mt-24;
    }

    &:hover .anchor-link {
      @apply opacity-100;
    }
  }
  /* mdx - disable task list bullet */
  .task-list-item {
    list-style-type: none;
  }
}

/* mdx - anchor and rehypeAutolinkHeadings style */
.subheading-anchor {
    @apply no-underline hover:underline;
}
.anchor-link {
  @apply ml-2 text-primary underline decoration-primary decoration-dotted decoration-1 underline-offset-2;
  @apply transition-[opacity,color] duration-100;    
  @apply opacity-0 focus-visible:opacity-100;

  &:hover {
    @apply decoration-solid;    
  }
  .icon-link::before {
    @apply content-['#'];
  }
}

/* mdx - inline Code | set border and font styles */
p span.inline-code code {
  @apply border border-dashed border-gray-400 dark:border-gray-600 font-light 
}
/*
  ---break---
*/
@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground;
  }
}